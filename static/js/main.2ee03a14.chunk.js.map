{"version":3,"sources":["Components/Gif.js","config.js","Components/GifsList.js","Components/Search.js","Components/App.js","serviceWorker.js","index.js"],"names":["Gif","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loaded","clicked","modalIsOpen","toSlackRes","openModal","bind","assertThisInitialized","closeModal","handleKeyPress","handleImageLoaded","handleClick","setState","imageStatus","event","key","ratingId","_this2","fetch","method","headers","Content-Type","body","JSON","stringify","text","attachments","fallback","color","title","gif","image_url","images","downsized_medium","url","then","res","catch","err","mosaic","id","rating","mapRating","gifClass","user","imgClass","react_default","a","createElement","className","lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","aria-label","alt","src","style","textAlign","onClick","shareToSlack","role","tabIndex","onLoad","onKeyPress","Component","GifsList","urls","gifsClass","sort","height","window","innerHeight","bottom","changedSearch","getGifs","useMosaicLayout","handleScroll","addEventListener","prevProps","search","token","baseUrl","length","Accept","json","data","currArray","concat","console","log","e","windowHeight","document","documentElement","offsetHeight","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","sortedArray","b","Date","_this3","gifObj","map","idx","src_Components_Gif","Search","input","handleChange","handleSubmit","target","value","preventDefault","updateSearch","onSubmit","type","onChange","App","Search_Search","updateSearchState","src_Components_GifsList","Boolean","location","hostname","match","appElement","getElementById","ReactModal","setAppElement","ReactDOM","render","src_Components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ee03a14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactModal from \"react-modal\";\nimport * as config from \".././config.js\";\nimport \"./Gif.css\";\n\nclass Gif extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      clicked: false,\n      modalIsOpen: false,\n      toSlackRes: \"\"\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleImageLoaded = this.handleImageLoaded.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: true });\n  }\n\n  handleClick() {\n    this.setState({ clicked: true });\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n  handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      this.openModal();\n    }\n  }\n  closeModal() {\n    this.setState({ modalIsOpen: false, toSlackRes: \"\" });\n  }\n\n  mapRating(ratingId) {\n    switch (ratingId) {\n      case \"g\":\n        return \"General Audiences\";\n      case \"pg\":\n        return \"Parental Guidance Suggested\";\n      case \"pg-13\":\n        return \"Parents Strongly Cautioned\";\n      case \"r\":\n        return \"Restricted\";\n      case \"nc-17\":\n        return \"Adults only\";\n      default:\n        return \"General Audiences\";\n    }\n  }\n\n  shareToSlack() {\n    fetch(config.slack_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: \"Hey! Check this out\",\n        attachments: [\n          {\n            fallback: \"Gif\",\n            color: \"#2eb886\",\n            title: this.props.gif.title,\n            image_url: this.props.gif.images.downsized_medium.url\n          }\n        ]\n      })\n    })\n      .then(res => {\n        this.setState({ toSlackRes: \"ok\" });\n      })\n      .catch(err => {\n        this.setState({ toSlackRes: \"err\" });\n      });\n  }\n\n  render() {\n    const { gif } = this.props;\n    const { mosaic } = this.props;\n    const id = gif[\"id\"];\n    const url = gif[\"images\"][\"downsized_medium\"][\"url\"];\n    const rating = this.mapRating(gif[\"rating\"]);\n    const title = gif[\"title\"];\n    const gifClass = mosaic === \"gifsMosaic\" ? \"gifMosaic\" : \"gif\";\n\n    let user = \"unknown\";\n    if (gif.user) {\n      user = gif[\"user\"][\"username\"];\n    }\n    const imgClass = this.state.imageStatus ? \"showImg\" : \"hideImg\";\n    return (\n      <div className={gifClass}>\n        <ReactModal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          className=\"modal\"\n          contentLabel=\"Example Modal\"\n        >\n          <img\n            aria-label={title}\n            key={id}\n            alt={title}\n            src={url}\n            className=\"modalImg\"\n          />\n          <div className=\"info\">\n            <h2 style={{ textAlign: \"center\" }}>{title}</h2>\n            <div>\n              Rating: <b>{rating}</b>\n            </div>{\" \"}\n            <div className=\"slack\">\n              <button\n                className=\"slackBtn\"\n                onClick={this.shareToSlack.bind(this)}\n              />\n              {this.state.toSlackRes === \"ok\" ? (\n                <div className=\"slackResponse\">\n                  <span role=\"img\" aria-label=\"smile-emoji\">\n                    😊\n                  </span>{\" \"}\n                  Successfully sent to Slack\n                </div>\n              ) : (\n                <div />\n              )}\n              {this.state.toSlackRes === \"err\" ? (\n                <div className=\"slackResponse\">\n                  {\" \"}\n                  <span role=\"img\" aria-label=\"sad-emoji\">\n                    �😔\n                  </span>{\" \"}\n                  Something went wrong{\" \"}\n                </div>\n              ) : (\n                <div />\n              )}\n            </div>\n            <div>\n              <i>Uploaded by: {user}</i>\n            </div>\n          </div>\n        </ReactModal>\n        <div className=\"placeholder\">\n          <img\n            tabIndex={0}\n            className={imgClass}\n            aria-label={title}\n            key={id}\n            src={url}\n            alt={title}\n            onLoad={this.handleImageLoaded}\n            onClick={this.openModal}\n            onKeyPress={this.handleKeyPress}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gif;\n","export const url = \"https://api.giphy.com/v1/gifs/\";\nexport const token = \"Omhm6ajl8QPeCrypi6UqAcf6zHPtD2cx\";\nexport const slack_url =\n  \"https://hooks.slack.com/services/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\";\n","import React, { Component } from \"react\";\nimport * as config from \"../config\";\nimport Gif from \"./Gif\";\nimport \"./GifsList.css\";\n\nclass GifsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urls: [],\n      gifsClass: \"gifs\",\n      sort: \"\",\n      height: window.innerHeight,\n      bottom: false,\n      changedSearch: false\n    };\n    this.getGifs = this.getGifs.bind(this);\n    this.useMosaicLayout = this.useMosaicLayout.bind(this);\n    this.sort = this.sort.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.getGifs();\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.urls && prevProps.search !== this.props.search) {\n      this.setState({ urls: [] });\n      this.getGifs();\n    }\n  }\n\n  getGifs() {\n    const { token } = config;\n    const baseUrl = config.url;\n    const { search } = this.props;\n\n    let url = \"\";\n    if (search === \"\") {\n      url = baseUrl + \"trending?api_key=\" + token;\n    } else {\n      url = baseUrl + \"search?api_key=\" + token + \"&q=\" + search;\n    }\n    url += \"&offset=\" + this.state.urls.length;\n\n    fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        const urls = res.data;\n        if (this.state.urls.length === 0) {\n          this.setState({ urls });\n        } else {\n          let currArray = this.state.urls.concat(urls);\n          this.setState({ urls: currArray });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleScroll(e) {\n    const windowHeight =\n      \"innerHeight\" in window\n        ? window.innerHeight\n        : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n      this.setState({\n        bottom: true\n      });\n      this.getGifs();\n    } else {\n      this.setState({\n        bottom: false\n      });\n    }\n  }\n  useMosaicLayout() {\n    this.state.gifsClass === \"gifs\"\n      ? this.setState({ gifsClass: \"gifsMosaic\" })\n      : this.setState({ gifsClass: \"gifs\" });\n  }\n  sort() {\n    let sortedArray = [];\n    let sort = \"\";\n    if (this.state.sort === (\"\" || \"ASC\")) {\n      sortedArray = this.state.urls.sort(function(a, b) {\n        return new Date(b[\"import_datetime\"]) - new Date(a[\"import_datetime\"]);\n      });\n      sort = \"DESC\";\n    } else {\n      sortedArray = this.state.urls.sort(function(a, b) {\n        return new Date(a[\"import_datetime\"]) - new Date(b[\"import_datetime\"]);\n      });\n      sort = \"ASC\";\n    }\n    this.setState({\n      urls: sortedArray,\n      sort: sort\n    });\n  }\n  render() {\n    const urls = this.state.urls;\n\n    if (urls) {\n      const gifObj = urls.map((gif, idx) => {\n        return (\n          <Gif key={\"gif-\" + idx} gif={gif} mosaic={this.state.gifsClass} />\n        );\n      });\n\n      return (\n        <div>\n          <div>\n            <button onClick={this.useMosaicLayout} className=\"options layout\">\n              Change Layout\n            </button>\n            <button onClick={this.sort} className=\"options\">\n              Sort {this.state.sort === \"ASC\" ? \"⬆\" : \"⬇\"}\n            </button>\n            <p>Sorted by: {this.state.sort !== \"\" ? \"uploaded time\" : \"\"}</p>\n          </div>\n          <div className={this.state.gifsClass}>{gifObj}</div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default GifsList;\n","import React, { Component } from \"react\";\nimport \"./Search.css\";\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ input: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.updateSearch(this.state.input);\n  }\n\n  render() {\n    const searchTitle = search => {\n      return search ? search : \"Trending\";\n    };\n    return (\n      <div className=\"search\">\n        <h1>Search for: {searchTitle(this.props.search)}</h1>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <input\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n            className=\"inputSearch\"\n            aria-label=\"search-input\"\n          />\n          <input type=\"submit\" value=\"Search\" className=\"searchButton\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport GifsList from \"./GifsList\";\nimport Search from \"./Search\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { search: \"\" };\n  }\n\n  updateSearchState(search) {\n    this.setState({ search: search });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Search\n            updateSearch={this.updateSearchState.bind(this)}\n            search={this.state.search}\n          />\n        </header>\n        <GifsList search={this.state.search} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ReactModal from \"react-modal\";\n\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst appElement = document.getElementById(\"root\");\n\nReactModal.setAppElement(appElement);\n\nReactDOM.render(<App />, appElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}