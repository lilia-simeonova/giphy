{"version":3,"sources":["Components/Gif.js","config.js","Components/GifsList.js","Components/Search.js","Components/Home.js","Components/UploadGifs.js","Components/App.js","serviceWorker.js","index.js"],"names":["Gif","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loaded","clicked","modalIsOpen","toSlackRes","openModal","bind","assertThisInitialized","closeModal","handleKeyPress","handleImageLoaded","handleClick","shareToSlack","img","removeEventListener","addEventListener","setState","imageStatus","event","key","ratingId","_this2","fetch","method","headers","Content-Type","body","JSON","stringify","text","attachments","fallback","color","title","gif","image_url","images","downsized_medium","url","then","res","catch","err","_this3","mosaic","id","rating","mapRating","gifClass","user","imgClass","react_default","a","createElement","className","lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","aria-label","alt","src","style","textAlign","onClick","role","tabIndex","ref","onKeyPress","Component","GifsList","urls","gifsClass","sort","height","window","innerHeight","bottom","changedSearch","unmounted","getGifs","useMosaicLayout","handleScroll","prevProps","search","token","baseUrl","length","Accept","json","data","currArray","concat","console","log","e","windowHeight","document","documentElement","offsetHeight","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","sortedArray","b","Date","gifObj","map","idx","src_Components_Gif","Search","input","handleChange","handleSubmit","target","value","preventDefault","updateSearch","onSubmit","type","onChange","Home","slackList","updateSearchState","Search_Search","src_Components_GifsList","UploadGifs","imageURL","uploading","handleUploadImage","FormData","append","uploadInput","files","response","result","meta","status","message","msg","error","Fragment","href","disabled","App","BrowserRouter","Link","to","Route","exact","path","component","Boolean","location","hostname","match","appElement","getElementById","ReactModal","setAppElement","ReactDOM","render","src_Components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uZAqLeA,qBA/Kb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAQ,EACRC,SAAS,EACTC,aAAa,EACbC,WAAY,IAEdX,EAAKY,UAAYZ,EAAKY,UAAUC,KAAfZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACjBA,EAAKe,WAAaf,EAAKe,WAAWF,KAAhBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAClBA,EAAKgB,eAAiBhB,EAAKgB,eAAeH,KAApBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACtBA,EAAKiB,kBAAoBjB,EAAKiB,kBAAkBJ,KAAvBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACzBA,EAAKkB,YAAclB,EAAKkB,YAAYL,KAAjBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACnBA,EAAKmB,aAAenB,EAAKmB,aAAaN,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAbHA,sFAiBjBG,KAAKiB,IAAIC,oBAAoB,OAAQlB,KAAKc,+DAItCd,KAAKiB,KACPjB,KAAKiB,IAAIE,iBAAiB,OAAQnB,KAAKc,+DAKzCd,KAAKoB,SAAS,CAAEC,aAAa,0CAI7BrB,KAAKoB,SAAS,CAAEd,SAAS,wCAIzBN,KAAKoB,SAAS,CAAEb,aAAa,2CAGhBe,GACK,UAAdA,EAAMC,KACRvB,KAAKS,iDAKPT,KAAKoB,SAAS,CAAEb,aAAa,EAAOC,WAAY,uCAGxCgB,GACR,OAAQA,GACN,IAAK,IACH,MAAO,oBACT,IAAK,KACH,MAAO,8BACT,IAAK,QACH,MAAO,6BACT,IAAK,IACH,MAAO,aACT,IAAK,QACH,MAAO,cACT,QACE,MAAO,4DAIE,IAAAC,EAAAzB,KACb0B,MCrEF,gFDqEyB,CACrBC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,sBACNC,YAAa,CACX,CACEC,SAAU,MACVC,MAAO,UACPC,MAAOrC,KAAKJ,MAAM0C,IAAID,MACtBE,UAAWvC,KAAKJ,MAAM0C,IAAIE,OAAOC,iBAAiBC,UAKvDC,KAAK,SAAAC,GACJnB,EAAKL,SAAS,CAAEZ,WAAY,SAE7BqC,MAAM,SAAAC,GACLrB,EAAKL,SAAS,CAAEZ,WAAY,2CAIzB,IAAAuC,EAAA/C,KACCsC,EAAQtC,KAAKJ,MAAb0C,IACAU,EAAWhD,KAAKJ,MAAhBoD,OACFC,EAAKX,EAAG,GACRI,EAAMJ,EAAG,OAAH,qBACNY,EAASlD,KAAKmD,UAAUb,EAAG,QAC3BD,EAAQC,EAAG,MACXc,EAAsB,eAAXJ,EAA0B,YAAc,MAErDK,EAAO,UACPf,EAAIe,OACNA,EAAOf,EAAG,KAAH,UAET,IAAMgB,EAAWtD,KAAKI,MAAMiB,YAAc,UAAY,UACtD,OACEkC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,GACdG,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,OAAQ5D,KAAKI,MAAMG,YACnBsD,YAAa7D,KAAK8D,eAClBC,eAAgB/D,KAAKY,WACrB8C,UAAU,QACVM,aAAa,iBAEbT,EAAAC,EAAAC,cAAA,OACEQ,aAAY5B,EACZd,IAAK0B,EACLiB,IAAK7B,EACL8B,IAAKzB,EACLgB,UAAU,aAEZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIW,MAAO,CAAEC,UAAW,WAAahC,GACrCkB,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAIP,IACP,IACPK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWY,QAAStE,KAAKgB,eAChB,OAA1BhB,KAAKI,MAAMI,WACV+C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMc,KAAK,MAAMN,aAAW,eAA5B,gBAEQ,IAHV,8BAOAV,EAAAC,EAAAC,cAAA,YAEyB,QAA1BzD,KAAKI,MAAMI,WACV+C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZ,IACDH,EAAAC,EAAAC,cAAA,QAAMc,KAAK,MAAMN,aAAW,aAA5B,gBAEQ,IAJV,uBAKuB,KAGvBV,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBAAiBJ,MAIvBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OACEe,SAAU,EACVd,UAAWJ,EACXW,aAAY5B,EACZd,IAAK0B,EACLkB,IAAKzB,EACLwB,IAAK7B,EACLoC,IAAK,SAAAA,GACH1B,EAAK9B,IAAMwD,GAEbH,QAAStE,KAAKS,UACdiE,WAAY1E,KAAKa,0BAxKX8D,cEyJHC,qBAxJb,SAAAA,EAAYhF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACjB/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,KAAMJ,KACDQ,MAAQ,CACXyE,KAAM,GACNC,UAAW,OACXC,KAAM,GACNC,OAAQC,OAAOC,YACfC,QAAQ,EACRC,eAAe,GAEjBvF,EAAKwF,WAAY,EACjBxF,EAAKyF,QAAUzF,EAAKyF,QAAQ5E,KAAbZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACfA,EAAK0F,gBAAkB1F,EAAK0F,gBAAgB7E,KAArBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACvBA,EAAKkF,KAAOlF,EAAKkF,KAAKrE,KAAVZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACZA,EAAK2F,aAAe3F,EAAK2F,aAAa9E,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAdHA,sFAkBjBG,KAAKqF,WAAY,8CAIjBrF,KAAKsF,UACLL,OAAO9D,iBAAiB,SAAUnB,KAAKwF,yDAGtBC,GACZA,EAAUZ,MAAQY,EAAUC,SAAW1F,KAAKJ,MAAM8F,SACrD1F,KAAKoB,SAAS,CAAEyD,KAAM,GAAIE,KAAM,KAChC/E,KAAKsF,6CAIC,IAAA7D,EAAAzB,KACA2F,EDvCS,mCCwCXC,EDzCS,iCC0CPF,EAAW1F,KAAKJ,MAAhB8F,OAEJhD,EAAM,GAERA,EADa,KAAXgD,EACIE,EAAU,oBAAsBD,EAEhCC,EAAU,kBAAoBD,EAAQ,MAAQD,EAEtDhD,GAAO,WAAa1C,KAAKI,MAAMyE,KAAKgB,OAEpCnE,MAAMgB,EAAK,CACTd,QAAS,CACPkE,OAAQ,mBACRjE,eAAgB,sBAGjBc,KAAK,SAAAC,GAAG,OAAIA,EAAImD,SAChBpD,KAAK,SAAAC,GACJ,IAAMiC,EAAOjC,EAAIoD,KACjB,IAAIvE,EAAK4D,UACT,GAA+B,IAA3B5D,EAAKrB,MAAMyE,KAAKgB,OAClBpE,EAAKL,SAAS,CAAEyD,aACX,CACL,IAAIoB,EAAYxE,EAAKrB,MAAMyE,KAAKqB,OAAOrB,GACvCpD,EAAKL,SAAS,CAAEyD,KAAMoB,OAGzBpD,MAAM,SAAAC,GAAG,OAAIqD,QAAQC,IAAItD,0CAGjBuD,GACX,IAAMC,EACJ,gBAAiBrB,OACbA,OAAOC,YACPqB,SAASC,gBAAgBC,aACzB3E,EAAOyE,SAASzE,KAChB4E,EAAOH,SAASC,gBAChBG,EAAYC,KAAKC,IACrB/E,EAAKgF,aACLhF,EAAK2E,aACLC,EAAKK,aACLL,EAAKI,aACLJ,EAAKD,cAEcH,EAAerB,OAAO+B,aACvBL,GAClB3G,KAAKoB,SAAS,CACZ+D,QAAQ,IAEVnF,KAAKsF,WAELtF,KAAKoB,SAAS,CACZ+D,QAAQ,8CAKa,SAAzBnF,KAAKI,MAAM0E,UACP9E,KAAKoB,SAAS,CAAE0D,UAAW,eAC3B9E,KAAKoB,SAAS,CAAE0D,UAAW,wCAI/B,IAAImC,EAAc,GACdlC,EAAO,GACoB,QAA3B/E,KAAKI,MAAM2E,MACbkC,EAAcjH,KAAKI,MAAMyE,KAAKE,KAAK,SAASvB,EAAG0D,GAC7C,OAAO,IAAIC,KAAKD,EAAC,iBAAuB,IAAIC,KAAK3D,EAAC,mBAEpDuB,EAAO,SAEPkC,EAAcjH,KAAKI,MAAMyE,KAAKE,KAAK,SAASvB,EAAG0D,GAC7C,OAAO,IAAIC,KAAK3D,EAAC,iBAAuB,IAAI2D,KAAKD,EAAC,mBAEpDnC,EAAO,OAET/E,KAAKoB,SAAS,CACZyD,KAAMoC,EACNlC,KAAMA,qCAID,IAAAhC,EAAA/C,KACD6E,EAAO7E,KAAKI,MAAMyE,KAExB,GAAIA,EAAM,CACR,IAAMuC,EAASvC,EAAKwC,IAAI,SAAC/E,EAAKgF,GAC5B,OACE/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAKhG,IAAK,OAAS+F,EAAKhF,IAAKA,EAAKU,OAAQD,EAAK3C,MAAM0E,cAIzD,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQa,QAAStE,KAAKuF,gBAAiB7B,UAAU,kBAAjD,iBAGAH,EAAAC,EAAAC,cAAA,UAAQa,QAAStE,KAAK+E,KAAMrB,UAAU,WAAtC,QAC4B,QAApB1D,KAAKI,MAAM2E,KAAiB,SAAM,GACnB,SAApB/E,KAAKI,MAAM2E,KAAkB,SAAM,IAEtCxB,EAAAC,EAAAC,cAAA,SACG,IACoB,KAApBzD,KAAKI,MAAM2E,KACR,4BAA8B/E,KAAKI,MAAM2E,KACzC,KAGRxB,EAAAC,EAAAC,cAAA,OAAKC,UAAW1D,KAAKI,MAAM0E,WAAYsC,YAlJ1BzC,cCEF6C,qBACnB,SAAAA,EAAY5H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACjB3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,KAAMJ,KAEDQ,MAAQ,CAAEqH,MAAO,IACtB5H,EAAK6H,aAAe7H,EAAK6H,aAAahH,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAK8H,aAAe9H,EAAK8H,aAAajH,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KALHA,4EAQNyB,GACXtB,KAAKoB,SAAS,CAAEqG,MAAOnG,EAAMsG,OAAOC,6CAGzBvG,GACXA,EAAMwG,iBACN9H,KAAKJ,MAAMmI,aAAa/H,KAAKI,MAAMqH,wCAInC,OACElE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,yBAA6BzD,KAAKJ,MAAM8F,QAxBrB,YAyBnBnC,EAAAC,EAAAC,cAAA,QAAMuE,SAAUhI,KAAK2H,aAAajH,KAAKV,OACrCuD,EAAAC,EAAAC,cAAA,SACEwE,KAAK,OACLJ,MAAO7H,KAAKI,MAAMyH,MAClBK,SAAUlI,KAAK0H,aACfhE,UAAU,cACVO,aAAW,iBAEbV,EAAAC,EAAAC,cAAA,SAAOwE,KAAK,SAASJ,MAAM,SAASnE,UAAU,0BA9BpBiB,cC0BrBwD,qBAzBb,SAAAA,IAAc,IAAAtI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACZtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,QACKI,MAAQ,CAAEsF,OAAQ,GAAI0C,UAAW,IACtCvI,EAAKwI,kBAAoBxI,EAAKwI,kBAAkB3H,KAAvBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAHbA,iFAMI6F,GAChB1F,KAAKoB,SAAS,CAAEsE,OAAQA,qCAIxB,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC6E,EAAD,CACEP,aAAc/H,KAAKqI,kBACnB3C,OAAQ1F,KAAKI,MAAMsF,UAGvBnC,EAAAC,EAAAC,cAAC8E,EAAD,CAAU7C,OAAQ1F,KAAKI,MAAMsF,iBApBlBf,cCuFJ6D,qBAzFb,SAAAA,IAAc,IAAA3I,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwI,IACZ3I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0I,GAAArI,KAAAH,QACKI,MAAQ,CACXqI,SAAU,GACVC,WAAW,GAEb7I,EAAK8I,kBAAoB9I,EAAK8I,kBAAkBjI,KAAvBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KANbA,iFASIyB,GAAO,IAAAG,EAAAzB,KACvBsB,EAAMwG,iBAEN,IACM9B,EAAO,IAAI4C,SACjB5C,EAAK6C,OAAO,OAAQ7I,KAAK8I,YAAYC,MAAM,IAC3C/C,EAAK6C,OAAO,UJnBK,oCIqBZ7I,KAAK8I,YAAYC,MAAM,IAI5B/I,KAAKoB,SAAS,CAAEsH,WAAW,IAC3BvC,QAAQC,IAAIJ,GAEZtE,MJzBqB,mCIyBJ,CACfC,OAAQ,OACRG,KAAMkE,IAELrD,KAAK,SAAAqG,GAAQ,OAAIA,EAASjD,SAC1BpD,KAAK,SAAAsG,GACJ9C,QAAQC,IAAI,QAAS6C,GACM,MAAvBA,EAAOC,KAAKC,QACd1H,EAAKL,SAAS,CACZqH,SAAU,0BAA4BQ,EAAOjD,KAAK/C,GAClDmG,QAAS,OAEX3H,EAAKqH,YAAYjB,MAAQ,IAEzBpG,EAAKL,SAAS,CAAEgI,QAASH,EAAOC,KAAKG,QAGxCxG,MAAM,SAAAC,GACLqD,QAAQmD,MAAMxG,GACdrB,EAAKL,SAAS,CAAEgI,QAAS,4BAE1BzG,KAAK,WACJlB,EAAKL,SAAS,CAAEsH,WAAW,OA5B7B1I,KAAKoB,SAAS,CAAEgI,QAAS,sDAgCpB,IAAArG,EAAA/C,KACP,OACEuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZ1D,KAAKI,MAAMsI,UACV,eACyB,OAAvB1I,KAAKI,MAAMgJ,QACb7F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+F,SAAA,qCACgC,IAC9BhG,EAAAC,EAAAC,cAAA,KAAG+F,KAAMxJ,KAAKI,MAAMqI,UAAWzI,KAAKI,MAAMqI,WAG5CzI,KAAKI,MAAMgJ,SAGf7F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAasE,SAAUhI,KAAK2I,mBAC1CpF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEyE,SAAU,WACRnF,EAAK3B,SAAS,CAAEgI,QAAS,MAE3B3E,IAAK,SAAAA,GACH1B,EAAK+F,YAAcrE,GAErBwD,KAAK,UAGT1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAe+F,SAAUzJ,KAAKI,MAAMsI,WAAtD,oBAjFa/D,cC2BV+E,qBAvBb,SAAAA,IAAc,IAAA7J,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0J,IACZ7J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4J,GAAAvJ,KAAAH,QACKI,MAAQ,CAAEsF,OAAQ,IAFX7F,wEAMZ,OACE0D,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,SACAH,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAtG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMC,GAAG,WAAT,eAGFtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACjC5E,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWzB,aAjB/B7D,cCKEuF,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASC,MACvB,2DCTN,IAAMC,EAAa/D,SAASgE,eAAe,QAE3CC,IAAWC,cAAcH,GAEzBI,IAASC,OAAOpH,EAAAC,EAAAC,cAACmH,EAAD,MAASN,GDgHnB,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMpI,KAAK,SAAAqI,GACjCA,EAAaC","file":"static/js/main.4ed169f8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactModal from \"react-modal\";\nimport * as config from \".././config.js\";\nimport \"./Gif.css\";\n\nclass Gif extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      clicked: false,\n      modalIsOpen: false,\n      toSlackRes: \"\"\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleImageLoaded = this.handleImageLoaded.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.shareToSlack = this.shareToSlack.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.img.removeEventListener(\"load\", this.handleImageLoaded);\n  }\n\n  componentDidMount() {\n    if (this.img) {\n      this.img.addEventListener(\"load\", this.handleImageLoaded);\n    }\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: true });\n  }\n\n  handleClick() {\n    this.setState({ clicked: true });\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      this.openModal();\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false, toSlackRes: \"\" });\n  }\n\n  mapRating(ratingId) {\n    switch (ratingId) {\n      case \"g\":\n        return \"General Audiences\";\n      case \"pg\":\n        return \"Parental Guidance Suggested\";\n      case \"pg-13\":\n        return \"Parents Strongly Cautioned\";\n      case \"r\":\n        return \"Restricted\";\n      case \"nc-17\":\n        return \"Adults only\";\n      default:\n        return \"General Audiences\";\n    }\n  }\n\n  shareToSlack() {\n    fetch(config.slackUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: \"Hey! Check this out\",\n        attachments: [\n          {\n            fallback: \"Gif\",\n            color: \"#2eb886\",\n            title: this.props.gif.title,\n            image_url: this.props.gif.images.downsized_medium.url\n          }\n        ]\n      })\n    })\n      .then(res => {\n        this.setState({ toSlackRes: \"ok\" });\n      })\n      .catch(err => {\n        this.setState({ toSlackRes: \"err\" });\n      });\n  }\n\n  render() {\n    const { gif } = this.props;\n    const { mosaic } = this.props;\n    const id = gif[\"id\"];\n    const url = gif[\"images\"][\"downsized_medium\"][\"url\"];\n    const rating = this.mapRating(gif[\"rating\"]);\n    const title = gif[\"title\"];\n    const gifClass = mosaic === \"gifsMosaic\" ? \"gifMosaic\" : \"gif\";\n\n    let user = \"unknown\";\n    if (gif.user) {\n      user = gif[\"user\"][\"username\"];\n    }\n    const imgClass = this.state.imageStatus ? \"showImg\" : \"hideImg\";\n    return (\n      <div className={gifClass}>\n        <ReactModal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          className=\"modal\"\n          contentLabel=\"Example Modal\"\n        >\n          <img\n            aria-label={title}\n            key={id}\n            alt={title}\n            src={url}\n            className=\"modalImg\"\n          />\n          <div className=\"info\">\n            <h2 style={{ textAlign: \"center\" }}>{title}</h2>\n            <div>\n              Rating: <b>{rating}</b>\n            </div>{\" \"}\n            <div className=\"slack\">\n              <button className=\"slackBtn\" onClick={this.shareToSlack} />\n              {this.state.toSlackRes === \"ok\" ? (\n                <div className=\"slackResponse\">\n                  <span role=\"img\" aria-label=\"smile-emoji\">\n                    😊\n                  </span>{\" \"}\n                  Successfully sent to Slack\n                </div>\n              ) : (\n                <div />\n              )}\n              {this.state.toSlackRes === \"err\" ? (\n                <div className=\"slackResponse\">\n                  {\" \"}\n                  <span role=\"img\" aria-label=\"sad-emoji\">\n                    😔\n                  </span>{\" \"}\n                  Something went wrong{\" \"}\n                </div>\n              ) : (\n                <div />\n              )}\n            </div>\n            <div>\n              <i>Uploaded by: {user}</i>\n            </div>\n          </div>\n        </ReactModal>\n        <div className=\"placeholder\">\n          <img\n            tabIndex={0}\n            className={imgClass}\n            aria-label={title}\n            key={id}\n            src={url}\n            alt={title}\n            ref={ref => {\n              this.img = ref;\n            }}\n            onClick={this.openModal}\n            onKeyPress={this.handleKeyPress}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gif;\n","export const url = \"https://api.giphy.com/v1/gifs/\";\nexport const token = \"37QfhlkZazowhlelLtUya3WI0tPNvDOr\";\nexport const slackUrl =\n  \"https://hooks.slack.com/services/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\";\nexport const uploadUrl = \"https://upload.giphy.com/v1/gifs\";\n","import React, { Component } from \"react\";\nimport * as config from \"../config\";\nimport Gif from \"./Gif\";\nimport \"./GifsList.css\";\n\nclass GifsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urls: [],\n      gifsClass: \"gifs\",\n      sort: \"\",\n      height: window.innerHeight,\n      bottom: false,\n      changedSearch: false\n    };\n    this.unmounted = false;\n    this.getGifs = this.getGifs.bind(this);\n    this.useMosaicLayout = this.useMosaicLayout.bind(this);\n    this.sort = this.sort.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  componentDidMount() {\n    this.getGifs();\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.urls && prevProps.search !== this.props.search) {\n      this.setState({ urls: [], sort: \"\" });\n      this.getGifs();\n    }\n  }\n\n  getGifs() {\n    const { token } = config;\n    const baseUrl = config.url;\n    const { search } = this.props;\n\n    let url = \"\";\n    if (search === \"\") {\n      url = baseUrl + \"trending?api_key=\" + token;\n    } else {\n      url = baseUrl + \"search?api_key=\" + token + \"&q=\" + search;\n    }\n    url += \"&offset=\" + this.state.urls.length;\n\n    fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        const urls = res.data;\n        if (this.unmounted) return;\n        if (this.state.urls.length === 0) {\n          this.setState({ urls });\n        } else {\n          let currArray = this.state.urls.concat(urls);\n          this.setState({ urls: currArray });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleScroll(e) {\n    const windowHeight =\n      \"innerHeight\" in window\n        ? window.innerHeight\n        : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n      this.setState({\n        bottom: true\n      });\n      this.getGifs();\n    } else {\n      this.setState({\n        bottom: false\n      });\n    }\n  }\n  useMosaicLayout() {\n    this.state.gifsClass === \"gifs\"\n      ? this.setState({ gifsClass: \"gifsMosaic\" })\n      : this.setState({ gifsClass: \"gifs\" });\n  }\n\n  sort() {\n    let sortedArray = [];\n    let sort = \"\";\n    if (this.state.sort === (\"\" || \"ASC\")) {\n      sortedArray = this.state.urls.sort(function(a, b) {\n        return new Date(b[\"import_datetime\"]) - new Date(a[\"import_datetime\"]);\n      });\n      sort = \"DESC\";\n    } else {\n      sortedArray = this.state.urls.sort(function(a, b) {\n        return new Date(a[\"import_datetime\"]) - new Date(b[\"import_datetime\"]);\n      });\n      sort = \"ASC\";\n    }\n    this.setState({\n      urls: sortedArray,\n      sort: sort\n    });\n  }\n\n  render() {\n    const urls = this.state.urls;\n\n    if (urls) {\n      const gifObj = urls.map((gif, idx) => {\n        return (\n          <Gif key={\"gif-\" + idx} gif={gif} mosaic={this.state.gifsClass} />\n        );\n      });\n\n      return (\n        <div>\n          <div>\n            <button onClick={this.useMosaicLayout} className=\"options layout\">\n              Change Layout\n            </button>\n            <button onClick={this.sort} className=\"options\">\n              Sort {this.state.sort === \"ASC\" ? \"⬆\" : \"\"}\n              {this.state.sort === \"DESC\" ? \"⬇\" : \"\"}\n            </button>\n            <p>\n              {\" \"}\n              {this.state.sort !== \"\"\n                ? \"Sorted by: uploaded time \" + this.state.sort\n                : \"\"}\n            </p>\n          </div>\n          <div className={this.state.gifsClass}>{gifObj}</div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default GifsList;\n","import React, { Component } from \"react\";\nimport \"./Search.css\";\n\nconst searchTitle = search => {\n  return search ? search : \"Trending\";\n};\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ input: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.updateSearch(this.state.input);\n  }\n\n  render() {\n    return (\n      <div className=\"search\">\n        <h1>Search for: {searchTitle(this.props.search)}</h1>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <input\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n            className=\"inputSearch\"\n            aria-label=\"search-input\"\n          />\n          <input type=\"submit\" value=\"Search\" className=\"searchButton\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport GifsList from \"./GifsList\";\nimport Search from \"./Search\";\n\nimport \"./Home.css\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = { search: \"\", slackList: [] };\n    this.updateSearchState = this.updateSearchState.bind(this);\n  }\n\n  updateSearchState(search) {\n    this.setState({ search: search });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <header>\n          <Search\n            updateSearch={this.updateSearchState}\n            search={this.state.search}\n          />\n        </header>\n        <GifsList search={this.state.search} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport * as config from \".././config\";\nimport \"./UploadGifs.css\";\n\nclass UploadGifs extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageURL: \"\",\n      uploading: false\n    };\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleUploadImage(event) {\n    event.preventDefault();\n\n    const uploadUrl = config.uploadUrl;\n    const data = new FormData();\n    data.append(\"file\", this.uploadInput.files[0]);\n    data.append(\"api_key\", config.token);\n\n    if (!this.uploadInput.files[0]) {\n      this.setState({ message: \"No file selected\" });\n      return;\n    }\n    this.setState({ uploading: true });\n    console.log(data);\n\n    fetch(uploadUrl, {\n      method: \"POST\",\n      body: data\n    })\n      .then(response => response.json())\n      .then(result => {\n        console.log(\"succc\", result);\n        if (result.meta.status === 200) {\n          this.setState({\n            imageURL: \"https://giphy.com/gifs/\" + result.data.id,\n            message: \"ok\"\n          });\n          this.uploadInput.value = \"\";\n        } else {\n          this.setState({ message: result.meta.msg });\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ message: \"Something went wrong.\" });\n      })\n      .then(() => {\n        this.setState({ uploading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"upload\">\n        <div className=\"result\">\n          {this.state.uploading ? (\n            \"Uploading...\"\n          ) : this.state.message === \"ok\" ? (\n            <>\n              Your image was uploaded here:{\" \"}\n              <a href={this.state.imageURL}>{this.state.imageURL}</a>\n            </>\n          ) : (\n            this.state.message\n          )}\n        </div>\n        <form className=\"uploadForm\" onSubmit={this.handleUploadImage}>\n          <h3>Upload file</h3>\n          <div>\n            <input\n              onChange={() => {\n                this.setState({ message: \"\" });\n              }}\n              ref={ref => {\n                this.uploadInput = ref;\n              }}\n              type=\"file\"\n            />\n          </div>\n          <br />\n          <div>\n            <button className=\"uploadButton\" disabled={this.state.uploading}>\n              Upload\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default UploadGifs;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport UploadGifs from \"./UploadGifs\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { search: \"\" };\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <nav className=\"nav\">\n            <div className=\"title\">Giphy</div>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/upload\">Upload Gif</Link>\n          </nav>\n\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/upload\" component={UploadGifs} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ReactModal from \"react-modal\";\n\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst appElement = document.getElementById(\"root\");\n\nReactModal.setAppElement(appElement);\n\nReactDOM.render(<App />, appElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}